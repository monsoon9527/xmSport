name: 小米运动修改步数

on:
  schedule:
    - cron: '00 12 * * *'  # UTC时间12:00运行，对应北京时间20:00(但是存在严重的延迟)
  workflow_dispatch:     # 允许手动触发，不再需要输入参数

jobs:
  xmSport:
    runs-on: ubuntu-latest
    timeout-minutes: 15   # 设置超时限制
    
    # 设置任务级环境变量
    env:
      TZ: Asia/Shanghai  # 设置时区为中国标准时间(北京时间)
    
    # 避免并发执行
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 1  # 浅克隆，提高速度
        
      - name: 设置Node.js环境
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'   # 启用npm缓存
          
      - name: 安装依赖
        run: npm ci       # 使用ci而不是install，更快更可靠
      # ====== 随机 7 天跳过（当月固定）开始 ======
      - name: 准备日期参数
        id: dt
        run: |
          echo "year=$(TZ=Asia/Shanghai date +'%Y')" >> "$GITHUB_OUTPUT"
          echo "month=$(TZ=Asia/Shanghai date +'%m')" >> "$GITHUB_OUTPUT"
          echo "ym=$(TZ=Asia/Shanghai date +'%Y-%m')" >> "$GITHUB_OUTPUT"

      - name: 恢复当月跳过日期缓存
        id: cache-skip
        uses: actions/cache@v3
        with:
          path: .github/_skip_days
          key: skip-days-${{ steps.dt.outputs.ym }}
          
      - name: 缓存命中情况
        run: echo "cache-hit=${{ steps.cache-skip.outputs.cache-hit }}"
        
      - name: 生成/读取当月随机 7 天
        id: prepare-skip-days
        run: |
          YEAR='${{ steps.dt.outputs.year }}'
          MONTH='${{ steps.dt.outputs.month }}'
          FILE=".github/_skip_days/${YEAR}-${MONTH}.txt"
          mkdir -p .github/_skip_days
          # 若本次已命中缓存，通常文件已存在；若首次运行或缓存空，才生成
          if [ -f "$FILE" ] && [ "$(wc -l < "$FILE")" -eq 7 ]; then
            echo "已存在随机跳过日文件：$FILE"
          else
            DAYS_IN_MONTH=$(date -d "${YEAR}-${MONTH}-01 +1 month -1 day" +%d)
            seq -w 1 "$DAYS_IN_MONTH" | shuf | head -n 7 | sort -n > "$FILE"
            echo "已生成随机跳过日文件：$FILE"
          fi
      
          echo "本月随机跳过日期："
          cat "$FILE"
      
          TODAY=$(TZ=Asia/Shanghai date +%d)
          if grep -qw "$TODAY" "$FILE"; then
            echo "should_skip=true" >> "$GITHUB_OUTPUT"
            echo "今天($TODAY) 为跳过日，将跳过后续执行。"
          else
            echo "should_skip=false" >> "$GITHUB_OUTPUT"
            echo "今天($TODAY) 不是跳过日，继续执行。"
          fi
      # ====== 随机 7 天跳过（当月固定）结束 ======
      - name: 读取数据模板文件
        if: steps.prepare-skip-days.outputs.should_skip != 'true'
        id: data-json
        run: |
          DATA_CONTENT=$(cat dist/data.txt)
          echo "DATA_JSON<<EOF" >> $GITHUB_ENV
          echo "$DATA_CONTENT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "✅ 已读取数据模板文件"
        
      - name: 运行脚本
        if: steps.prepare-skip-days.outputs.should_skip != 'true'
        env:
          PHONE_NUMBER: ${{ secrets.PHONE_NUMBER }}
          PASSWORD: ${{ secrets.PASSWORD }}
          # DATA_JSON由上一步自动设置，不再需要用户手动配置
          xmSportMinStep: ${{ secrets.xmSportMinStep || '20000' }}
          xmSportMaxStep: ${{ secrets.xmSportMaxStep || '22000' }}
          ENABLE_NOTIFY: ${{ secrets.ENABLE_NOTIFY || 'false' }}
          # 通知相关环境变量
          SERVERCHAN_KEY: ${{ secrets.SERVERCHAN_KEY }}
          BARK_KEY: ${{ secrets.BARK_KEY }}
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
          DINGTALK_WEBHOOK: ${{ secrets.DINGTALK_WEBHOOK }}
          DINGTALK_SECRET: ${{ secrets.DINGTALK_SECRET }}
          WECOM_KEY: ${{ secrets.WECOM_KEY }}
          PUSHPLUS_TOKEN: ${{ secrets.PUSHPLUS_TOKEN }}
        run: node dist/index.js
      
      - name: 处理结果
        if: steps.prepare-skip-days.outputs.should_skip != 'true'
        run: |
          echo "当前时间: $(date "+%Y/%m/%d %H:%M:%S")"
          echo "工作流执行状态: ${{ job.status }}" 
